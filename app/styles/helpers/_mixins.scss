@mixin parallax($background-image, $opacity, $top, $bottom, $left, $right) {
  width: 100%;
  height: 100%;
  background: url($background-image);
  background-size: cover;
  background-color: black;
  background-attachment: fixed;
  opacity: $opacity;
  position: absolute;
  left: $left;
  right: $right;

  @if $top {
    top: $top;
  }

  @if $bottom {
    bottom: $bottom;
  }
}

@mixin zoom-animation($duration) {
  -webkit-transition: all $duration ease-in;
  -moz-transition: all $duration ease-in;
  -ms-transition: all $duration ease-in;
  transition: all $duration ease-in;
  transform: scale(1.04) translateY(-5px);
}

@mixin hideScroll() {
  -ms-overflow-style: none;
  scrollbar-width: none;
  &::-webkit-scrollbar {
    display: none;
  }
}

@mixin textClamp($rows: 1, $size: 100%) {
  display: -webkit-box;
  -webkit-line-clamp: $rows;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
  width: $size;
  max-width: $size;
  white-space: pre-wrap;
  word-break: break-word; // rớt xuống theo từ
}

@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}

@mixin absoluteCenter($direction) {
  position: absolute;
  @if $direction == "left" {
    left: 50%;
    transform: translateX(-50%);
  }
  @if $direction == "top" {
    top: 50%;
    transform: translateY(-50%);
  }
  @if $direction == "both" {
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
  }
}

@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
  @if $inset {
    box-shadow: inset $top $left $blur $color;
  } @else {
    box-shadow: $top $left $blur $color;
  }
}

@mixin flexBox(
  $item: stretch,
  $content: flex-start,
  $direction: row,
  $wrap: nowrap
) {
  display: flex;
  flex-direction: $direction;
  justify-content: $content;
  align-items: $item;
  flex-wrap: $wrap;
}

@mixin flexCenter() {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin gridCenter() {
  display: grid;
  place-items: center;
}

@mixin touchSlider($width: 80%, $gap: 2.5rem, $padding: 1rem) {
  display: grid !important;
  justify-content: flex-start !important;
  grid-auto-columns: $width;
  grid-auto-flow: column;
  grid-template-columns: unset;
  grid-column-gap: $gap;
  overflow-x: auto;
  padding: $padding;
  scroll-snap-type: x mandatory;
  scroll-snap-stop: always;
  @include hideScroll;
  & > * {
    scroll-snap-align: center;
    width: auto;
  }
}

@mixin rounded($size) {
  width: $size;
  height: $size;
  border-radius: 50%;
}

@mixin fixed-height($height) {
  max-height: $height;
  min-height: $height;
  height: $height;
}

@mixin placeholderColor($color) {
  &::-webkit-input-placeholder {
    -webkit-transition: color 200ms;
    color: $color;
  }
  &:-moz-placeholder {
    //Firefox 18-
    -moz-transition: color 200ms;
    color: $color;
  }
  &::-moz-placeholder {
    -moz-transition: color 200ms;
    color: $color;
  }
  &:-ms-input-placeholder {
    color: $color;
  }
}

@mixin retina {
  @media only screen and (-webkit-min-device-pixel-ratio: 1.5),
    only screen and (-moz-min-device-pixel-ratio: 1.5),
    only screen and (-o-min-device-pixel-ratio: 3 / 2),
    only screen and (min-device-pixel-ratio: 1.5),
    only screen and (min-resolution: 1.5dppx) {
    @content;
  }
}
